<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--用于配置全局属性，这样在配置文件中，可以通过占位符 ${} 进行属性值配置-->
    <properties resource="jdbc.properties"/>

    <!--用于定义别名。如上所示，这里把xyz.coolblog.model.ArticleDO 的别名定义为Article，这-->
    <!--样在 SQL 映射文件中，就可以直接使用别名，而不用每次都输入长长的全限定类名-->

    <settings>
        <setting name="cacheEnabled" value="true"/>
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="autoMappingBehavior" value="PARTIAL"/>
    </settings>

    <!-- 可以直接扫描全部的包 -->
    <!--<typeAliases>-->
        <!--<package name="com.geek.entity"/>-->
    <!--</typeAliases>-->

    <typeAliases>
        <typeAlias alias="Article"
                   type="com.geek.entity.Article"/>

        <typeAlias alias="Author"
                   type="com.geek.entity.Author"/>
    </typeAliases>

    <!--配置插件-->
    <!--<plugins>-->
        <!--<plugin interceptor=""></plugin>-->
    <!--</plugins>-->

    <!--用于定义全局的类型处理器-->
    <typeHandlers>
    <typeHandler handler="com.geek.constanst.ArticleTypeHandler"
                 javaType="com.geek.constanst.ArticleTypeEnum"/>
    </typeHandlers>

    <!--用于配置事务，以及数据源-->
    <!--用于区分环境-->
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${spring.datasource.driver-class-name}"/>
                <property name="url" value="${spring.datasource.url}"/>
                <property name="username" value="${spring.datasource.username}"/>
                <property name="password" value="${spring.datasource.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--用于配置 SQL 映射文件的位置信息-->
    <mappers>
        <!--分为rescource 和 class-->
        <mapper class="com.geek.mapper.ArticleMapper"/>

        <!--分为rescource 和 class-->
        <mapper class="com.geek.mapper.AuthorMapper"/>
    </mappers>
</configuration>